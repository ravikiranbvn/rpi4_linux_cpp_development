set(CMAKE_CROSSCOMPILING TRUE)
set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_SYSTEM_PROCESSOR arm)

set(CMAKE_TARGET_IS_RPI 1 CACHE INTERNAL "is raspberry pi build")
set (XTOOLS_COMPILER_DIR "/home/builduser/x-tools/armv8-rpi4-linux-gnu")
if (IS_DIRECTORY ${XTOOLS_COMPILER_DIR})
  message("x-tools toolchain found")
  set(TOOLCHAIN_PREFIX  "armv8-rpi4-linux-gnu-")
  set(TOOLCHAIN_SYSROOT "${XTOOLS_COMPILER_DIR}/armv8-rpi4-linux-gnu/sysroot")
  set(TOOLCHAIN_DIR     "${XTOOLS_COMPILER_DIR}/bin")
else()
  message(FATAL_ERROR "compiler '${COMPILER_VERSION}' toolchain not found in '${XTOOLS_COMPILER_DIR}'")
endif()
set(CMAKE_SYSROOT ${TOOLCHAIN_SYSROOT})
set(CMAKE_C_COMPILER   ${TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}gcc${TOOLCHAIN_POSTFIX} CACHE FILEPATH "c compiler")
set(CMAKE_CXX_COMPILER ${TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}g++${TOOLCHAIN_POSTFIX} CACHE FILEPATH "c++ compiler")
set(CMAKE_OBJCOPY      ${TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}objcopy CACHE INTERNAL "objcopy tool")
set(CMAKE_SIZE_UTIL    ${TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}size CACHE INTERNAL "size tool")
set(CMAKE_GDB          ${TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}gdb)
set(CMAKE_STRIP        ${TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}strip)
set(CMAKE_OBJDUMP      ${TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}objdump)
set(CMAKE_READELF      ${TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}readelf)
set(CMAKE_AR           ${TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}gcc-ar${TOOLCHAIN_POSTFIX} CACHE FILEPATH "ar")
set(CMAKE_NM           ${TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}gcc-nm${TOOLCHAIN_POSTFIX} CACHE FILEPATH "nm")
set(CMAKE_RANLIB       ${TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}gcc-ranlib${TOOLCHAIN_POSTFIX} CACHE FILEPATH "ranlib")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

execute_process(COMMAND bash -c "nproc | tr -d '\n'" OUTPUT_VARIABLE NPROC)